openapi: 3.0.0
info:
  title: Customer Service API
  description: API for managing customers in the system
  version: 1.0.0
servers:
  - url: http://localhost:8081
paths:
  /customers:
    post:
      summary: Create a new customer
      operationId: createCustomer
      requestBody:
        description: Customer to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input data
    get:
      summary: Retrieve all customers
      operationId: getAllCustomers
      responses:
        '200':
          description: List of all customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{id}:
    get:
      summary: Retrieve a customer by ID
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the customer to retrieve
      responses:
        '200':
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
    put:
      summary: Update a customer's details
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the customer to update
      requestBody:
        description: Updated customer details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
    delete:
      summary: Delete a customer by ID
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the customer to delete
      responses:
        '204':
          description: Customer deleted successfully
        '400':
          description: Cannot delete customer with active accounts
        '404':
          description: Customer not found
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the customer
        nombre:
          type: string
          description: First name of the customer
        apellido:
          type: string
          description: Last name of the customer
        dni:
          type: string
          description: DNI of the customer
        email:
          type: string
          format: email
          description: Email address of the customer
      required:
        - nombre
        - apellido
        - dni
