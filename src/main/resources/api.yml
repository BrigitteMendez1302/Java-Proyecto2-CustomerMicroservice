openapi: 3.0.1
info:
  title: Customer API
  description: API for managing customers
  version: 1.0.0
servers:
  - url: http://localhost:8081/customers
paths:
  /:
    post:
      summary: Create a new customer
      description: Creates a new customer in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all customers
      description: Retrieves a list of all customers.
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'

  /{id}:
    get:
      summary: Get a customer by ID
      description: Retrieves a customer by their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the customer to retrieve
      responses:
        '200':
          description: Customer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update a customer's details
      description: Updates the details of an existing customer.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the customer to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a customer
      description: Deletes a customer by their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the customer to delete
      responses:
        '204':
          description: Customer deleted successfully
        '400':
          description: Customer has active accounts and cannot be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the customer
        firstName:
          type: string
          description: Customer's first name
        lastName:
          type: string
          description: Customer's last name
        dni:
          type: string
          description: Customer's unique identification number
        email:
          type: string
          format: email
          description: Customer's email address
      required:
        - firstName
        - lastName
        - dni
        - email

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Description of the error
        status:
          type: string
          description: HTTP status code related to the error
      required:
        - error
